// <auto-generated />
using System;
using Gestao_de_Projetos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gestao_de_Projetos.Migrations
{
    [DbContext(typeof(Gestao_de_ProjetosContext))]
    [Migration("20220113180720_teste")]
    partial class teste
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gestao_de_Projetos.Models.Clientes", b =>
                {
                    b.Property<int>("ClientesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ClientesId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Gestao_de_Projetos.Models.Estado", b =>
                {
                    b.Property<int>("EstadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoID");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("Gestao_de_Projetos.Models.Funcao", b =>
                {
                    b.Property<int>("FuncaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeFuncao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FuncaoID");

                    b.ToTable("Funcao");
                });

            modelBuilder.Entity("Gestao_de_Projetos.Models.MembroProjeto", b =>
                {
                    b.Property<int>("membroProjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataEfetivaFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("MembrosID")
                        .HasColumnType("int");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("membroProjeto");

                    b.HasIndex("MembrosID");

                    b.HasIndex("ProjectID");

                    b.ToTable("MembroProjeto");
                });

            modelBuilder.Entity("Gestao_de_Projetos.Models.Membros", b =>
                {
                    b.Property<int>("MembrosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("FuncaoID")
                        .HasColumnType("int");

                    b.Property<string>("Nome_membro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.HasKey("MembrosID");

                    b.HasIndex("FuncaoID");

                    b.ToTable("Membros");
                });

            modelBuilder.Entity("Gestao_de_Projetos.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataEfetivaFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPrevistaFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPrevistaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstadoID")
                        .HasColumnType("int");

                    b.Property<string>("Nome_projeto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectID");

                    b.HasIndex("ClientesId");

                    b.HasIndex("EstadoID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Gestao_de_Projetos.Models.Tarefas", b =>
                {
                    b.Property<int>("TarefasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataEfetivaFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEfetivaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPrevistaFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPrevistaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoID")
                        .HasColumnType("int");

                    b.Property<int>("MembrosID")
                        .HasColumnType("int");

                    b.Property<string>("Nome_Tarefa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("TarefasID");

                    b.HasIndex("EstadoID");

                    b.HasIndex("MembrosID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("Gestao_de_Projetos.Models.MembroProjeto", b =>
                {
                    b.HasOne("Gestao_de_Projetos.Models.Membros", "Membros")
                        .WithMany()
                        .HasForeignKey("MembrosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestao_de_Projetos.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestao_de_Projetos.Models.Membros", b =>
                {
                    b.HasOne("Gestao_de_Projetos.Models.Funcao", "Funcao")
                        .WithMany()
                        .HasForeignKey("FuncaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestao_de_Projetos.Models.Project", b =>
                {
                    b.HasOne("Gestao_de_Projetos.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestao_de_Projetos.Models.Estado", "Estado")
                        .WithMany("Projects")
                        .HasForeignKey("EstadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestao_de_Projetos.Models.Tarefas", b =>
                {
                    b.HasOne("Gestao_de_Projetos.Models.Estado", "Estado")
                        .WithMany("Tarefas")
                        .HasForeignKey("EstadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestao_de_Projetos.Models.Membros", "Membros")
                        .WithMany("Tarefas")
                        .HasForeignKey("MembrosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestao_de_Projetos.Models.Project", "Project")
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjectID");
                });
#pragma warning restore 612, 618
        }
    }
}
